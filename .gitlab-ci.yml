variables:
  LC_ALL: C.UTF-8
  KNOT_DNS_BRANCH:
    value: "master"
    description: "Knot DNS branch to test"
  KNOT_RESOLVER_BRANCH:
    value: "master"
    description: "Knot Resolver branch to test"
  LIBYANG_BRANCH:
    value: "devel"
    description: "libyang branch to test"
  BIRD_BRANCH:
    value: "apkg-jru"
    description: "BIRD branch to test"


stages:
  - test
  - apkg
  - bird
  - libyang
  - knot-dns
  - knot-resolver
  - deploy


image: $CI_REGISTRY/packaging/apkg/test/debian-11-full


default:
  tags:
    - docker
    - linux
    - amd64


.setup-git: &setup-git
  - git config --global user.name CI
  - git config --global user.email ci@nic

.setup-py-reqs: &setup-py-reqs
  - pip3 install -r requirements.txt

.setup-py-develop: &setup-py-develop
  - python3 setup.py develop

.setup-project: &setup-project
  - *setup-git
  - *setup-py-develop


.test: &test
  stage: test

.apkg: &apkg
  stage: apkg
  only:
    variables:
      - $INTEGRATION
      - $TEST_APKG
  needs:
    - unit
  artifacts:
    when: always
    reports:
      junit: report.xml
  before_script:
    - python3 -m pip install dunamai

.bird: &bird
  stage: bird
  only:
    variables:
      - $INTEGRATION
      - $TEST_BIRD
  needs:
    - unit
  artifacts:
    when: always
    reports:
      junit: report.xml
  before_script:
    - echo "Testing BIRD branch $BIRD_BRANCH"

.libyang: &libyang
  stage: libyang
  only:
    variables:
      - $INTEGRATION
      - $TEST_LIBYANG
  needs:
    - unit
  artifacts:
    when: always
    reports:
      junit: report.xml
  before_script:
    - echo "Testing libyang branch $LIBYANG_BRANCH"

.knot-dns-base: &knot-dns-base
  stage: knot-dns
  only:
    variables:
      - $INTEGRATION
      - $TEST_KNOT_DNS
  needs:
    - unit
  artifacts:
    when: always
    reports:
      junit: report.xml
  before_script:
    - echo "Testing Knot DNS branch $KNOT_DNS_BRANCH"

.knot-dns: &knot-dns
  <<: *knot-dns-base
  needs:
    - make-archive-knot-dns
  dependencies:
    - make-archive-knot-dns

.knot-resolver: &knot-resolver
  stage: knot-resolver
  only:
    variables:
      - $INTEGRATION
      - $TEST_KNOT_RESOLVER
  needs:
    - unit
  artifacts:
    when: always
    reports:
      junit: report.xml
  before_script:
    - echo "Testing Knot Resolver branch $KNOT_RESOLVER_BRANCH"

.nixos: &nixos
  tags:
    - docker
    - linux
    - amd64
  image: nixos/nix
  variables:
    NIX_PATH: nixpkgs=https://github.com/nixos/nixpkgs/archive/nixos-unstable.tar.gz
  before_script:
    # - nix-env -f '<nixpkgs>' -iA gitMinimal
    - *setup-git
    # The image auto-detects as alpine distro, and tests don't allow overriding easily :-/
    - echo 'ID=nixos' > /etc/os-release
    # Some archive scripts need /bin/bash
    - nix-build '<nixpkgs>' -QA bash && ln -s "$(realpath ./result/bin/bash)" /bin/bash
    # dunamai is needed for apkg's make-archive script, i.e. for `apkg install` here
    # and also for tests in nixos-unstable-apkg below.
    - nix-env -f '<nixpkgs>' -iQA python3.pkgs.dunamai
    # Use bootstrap apkg to install itself from the current commit
    - nix-shell '<nixpkgs>' -p apkg --run 'apkg install'
  allow_failure: true


# basic tests

flake8:
  <<: *test
  except:
    variables:
      - $MINIMAL
  script:
    - flake8

pylint:
  <<: *test
  script:
    - pylint apkg
  except:
    variables:
      - $MINIMAL
  allow_failure: true

unit:
  <<: *test
  script:
    - *setup-py-develop
    - py.test-3 -v --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

self:
  <<: *test
  script:
    - *setup-git
    - *setup-py-reqs
    - *setup-py-develop
    - py.test-3 -v tests/self --junitxml=report.xml
  except:
    variables:
      - $MINIMAL
  artifacts:
    when: always
    reports:
      junit: report.xml


# integration tests: apkg

debian-9-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/debian-9
  <<: *apkg
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_apkg.py --junitxml=report.xml

debian-10-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/debian-10
  <<: *apkg
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_apkg.py --junitxml=report.xml

debian-11-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/debian-11
  <<: *apkg
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_apkg.py --junitxml=report.xml

ubuntu-18.04-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-18.04
  <<: *apkg
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_apkg.py --junitxml=report.xml

ubuntu-20.04-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-20.04
  <<: *apkg
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_apkg.py --junitxml=report.xml

ubuntu-22.04-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-22.04
  <<: *apkg
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_apkg.py --junitxml=report.xml

fedora-36-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/fedora-36
  <<: *apkg
  script:
    - *setup-project
    - py.test-3 -v ci/tests/test_apkg.py --junitxml=report.xml

fedora-37-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/fedora-37
  <<: *apkg
  script:
    - *setup-project
    - py.test-3 -v ci/tests/test_apkg.py --junitxml=report.xml

rocky-8-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/rocky-8
  <<: *apkg
  script:
    - *setup-project
    - pytest -v ci/tests/test_apkg.py --junitxml=report.xml

alma-9-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/alma-9
  <<: *apkg
  script:
    - *setup-project
    - pytest -v ci/tests/test_apkg.py --junitxml=report.xml

suse-15-apkg:
  image: $CI_REGISTRY/packaging/apkg/test/suse-15
  <<: *apkg
  script:
    - *setup-project
    - py.test3 -v ci/tests/test_apkg.py --junitxml=report.xml

nixos-unstable-apkg:
  <<: *apkg
  <<: *nixos
  script:
    - nix-env -f '<nixpkgs>' -iQA gnused
    # This test has issues when some step is cached.
    # Therefore we simplify by taking test dependencies just from the bootstrap apkg
    # (but use $PATH to force the new apkg binary built above).
    - rm -rf pkg/
    - nix-shell '<nixpkgs>' -A apkg --run "PATH='$PATH' "'$(type -P py.test) -v ci/tests/test_apkg.py --junitxml=report.xml'


# integration tests: BIRD

debian-9-bird:
  image: $CI_REGISTRY/packaging/apkg/test/debian-9
  <<: *bird
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_bird.py --junitxml=report.xml

debian-10-bird:
  image: $CI_REGISTRY/packaging/apkg/test/debian-10
  <<: *bird
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_bird.py --junitxml=report.xml

debian-11-bird:
  image: $CI_REGISTRY/packaging/apkg/test/debian-11
  <<: *bird
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_bird.py --junitxml=report.xml

ubuntu-18.04-bird:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-18.04
  <<: *bird
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_bird.py --junitxml=report.xml

ubuntu-20.04-bird:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-20.04
  <<: *bird
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_bird.py --junitxml=report.xml

ubuntu-22.04-bird:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-22.04
  <<: *bird
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_bird.py --junitxml=report.xml

fedora-36-bird:
  image: $CI_REGISTRY/packaging/apkg/test/fedora-36
  <<: *bird
  script:
    - *setup-project
    - py.test-3 -v ci/tests/test_bird.py --junitxml=report.xml

fedora-37-bird:
  image: $CI_REGISTRY/packaging/apkg/test/fedora-37
  <<: *bird
  script:
    - *setup-project
    - py.test-3 -v ci/tests/test_bird.py --junitxml=report.xml

centos-7-bird:
  image: $CI_REGISTRY/packaging/apkg/test/centos-7
  <<: *bird
  script:
    - *setup-project
    - pytest -v ci/tests/test_bird.py --junitxml=report.xml

rocky-8-bird:
  image: $CI_REGISTRY/packaging/apkg/test/rocky-8
  <<: *bird
  script:
    - *setup-project
    - pytest -v ci/tests/test_bird.py --junitxml=report.xml

alma-9-bird:
  image: $CI_REGISTRY/packaging/apkg/test/alma-9
  <<: *bird
  script:
    - *setup-project
    - pytest -v ci/tests/test_bird.py --junitxml=report.xml

suse-15-bird:
  image: $CI_REGISTRY/packaging/apkg/test/suse-15
  <<: *bird
  script:
    - *setup-project
    - py.test3 -v ci/tests/test_bird.py --junitxml=report.xml


# integration tests: libyang

debian-9-libyang:
  image: $CI_REGISTRY/packaging/apkg/test/debian-9
  <<: *libyang
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_libyang.py --junitxml=report.xml

debian-10-libyang:
  image: $CI_REGISTRY/packaging/apkg/test/debian-10
  <<: *libyang
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_libyang.py --junitxml=report.xml

debian-11-libyang:
  image: $CI_REGISTRY/packaging/apkg/test/debian-11
  <<: *libyang
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_libyang.py --junitxml=report.xml

ubuntu-18.04-libyang:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-18.04
  <<: *libyang
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_libyang.py --junitxml=report.xml

ubuntu-20.04-libyang:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-20.04
  <<: *libyang
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_libyang.py --junitxml=report.xml

ubuntu-22.04-libyang:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-22.04
  <<: *libyang
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_libyang.py --junitxml=report.xml

fedora-36-libyang:
  image: $CI_REGISTRY/packaging/apkg/test/fedora-36
  <<: *libyang
  script:
    - *setup-project
    - py.test-3 -v ci/tests/test_libyang.py --junitxml=report.xml

fedora-37-libyang:
  image: $CI_REGISTRY/packaging/apkg/test/fedora-37
  <<: *libyang
  script:
    - *setup-project
    - py.test-3 -v ci/tests/test_libyang.py --junitxml=report.xml

suse-15-libyang:
  image: $CI_REGISTRY/packaging/apkg/test/suse-15
  <<: *libyang
  script:
    - *setup-project
    - py.test3 -v ci/tests/test_libyang.py --junitxml=report.xml


# integration tests: Knot DNS

make-archive-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/debian-11
  <<: *knot-dns-base
  artifacts:
    paths:
      - knot-dns/pkg/
  script:
    - apt update
    - *setup-project
    - git clone --recursive -b $KNOT_DNS_BRANCH https://gitlab.nic.cz/knot/knot-dns.git
    - cd knot-dns
    - apkg build-dep
    - apkg make-archive

debian-10-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/debian-10
  <<: *knot-dns
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_dns.py --junitxml=report.xml

debian-11-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/debian-11
  <<: *knot-dns
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_dns.py --junitxml=report.xml

ubuntu-18.04-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-18.04
  <<: *knot-dns
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_dns.py --junitxml=report.xml

ubuntu-20.04-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-20.04
  <<: *knot-dns
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_dns.py --junitxml=report.xml

ubuntu-22.04-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-22.04
  <<: *knot-dns
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_dns.py --junitxml=report.xml

fedora-36-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/fedora-36
  <<: *knot-dns
  script:
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_dns.py --junitxml=report.xml

fedora-37-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/fedora-37
  <<: *knot-dns
  script:
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_dns.py --junitxml=report.xml

centos-7-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/centos-7
  <<: *knot-dns
  script:
    - *setup-project
    - pytest -v ci/tests/test_knot_dns.py --junitxml=report.xml

rocky-8-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/rocky-8
  <<: *knot-dns
  script:
    - *setup-project
    - pytest -v ci/tests/test_knot_dns.py --junitxml=report.xml

alma-9-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/alma-9
  <<: *knot-dns
  script:
    - *setup-project
    - pytest -v ci/tests/test_knot_dns.py --junitxml=report.xml

suse-15-knot-dns:
  image: $CI_REGISTRY/packaging/apkg/test/suse-15
  <<: *knot-dns
  script:
    - *setup-project
    - py.test3 -v ci/tests/test_knot_dns.py --junitxml=report.xml

nixos-unstable-knot-dns:
  <<: *knot-dns
  <<: *nixos
  script:
    - nix-shell "$(nix-shell -p apkg --run 'apkg srcpkg' | head -n 1)" --argstr extraDepsFor knot-dns --argstr extraDeps libmnl --run 'py.test -v ci/tests/test_knot_dns.py --junitxml=report.xml'


# integration tests: Knot Resolver

debian-10-knot-resolver:
  image: $CI_REGISTRY/packaging/apkg/test/debian-10
  <<: *knot-resolver
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_resolver.py --junitxml=report.xml

debian-11-knot-resolver:
  image: $CI_REGISTRY/packaging/apkg/test/debian-11
  <<: *knot-resolver
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_resolver.py --junitxml=report.xml

ubuntu-20.04-knot-resolver:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-20.04
  <<: *knot-resolver
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_resolver.py --junitxml=report.xml

ubuntu-22.04-knot-resolver:
  image: $CI_REGISTRY/packaging/apkg/test/ubuntu-22.04
  <<: *knot-resolver
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_resolver.py --junitxml=report.xml

fedora-36-knot-resolver:
  image: $CI_REGISTRY/packaging/apkg/test/fedora-36
  <<: *knot-resolver
  script:
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_resolver.py --junitxml=report.xml

fedora-37-knot-resolver:
  image: $CI_REGISTRY/packaging/apkg/test/fedora-37
  <<: *knot-resolver
  script:
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_resolver.py --junitxml=report.xml

centos-7-knot-resolver:
  image: $CI_REGISTRY/packaging/apkg/test/centos-7
  <<: *knot-resolver
  script:
    - *setup-project
    - pytest -v ci/tests/test_knot_resolver.py --junitxml=report.xml

rocky-8-knot-resolver:
  image: $CI_REGISTRY/packaging/apkg/test/rocky-8
  <<: *knot-resolver
  script:
    - *setup-project
    - pytest -v ci/tests/test_knot_resolver.py --junitxml=report.xml

alma-9-knot-resolver:
  image: $CI_REGISTRY/packaging/apkg/test/alma-9
  <<: *knot-resolver
  script:
    - *setup-project
    - pytest -v ci/tests/test_knot_resolver.py --junitxml=report.xml

suse-15-knot-resolver:
  image: $CI_REGISTRY/packaging/apkg/test/suse-15
  <<: *knot-resolver
  script:
    - *setup-project
    - py.test3 -v ci/tests/test_knot_resolver.py --junitxml=report.xml

nixos-unstable-knot-resolver:
  <<: *knot-resolver
  <<: *nixos
  script:
    # Knot Resolver's make-archive needs basically all build-time dependencies (meson dist),
    # so we add them on top of the normal apkg's development shell - and run the tests.
    - nix-shell "$(nix-shell -p apkg --run 'apkg srcpkg' | head -n 1)" --argstr extraDepsFor knot-resolver --run 'py.test -v ci/tests/test_knot_resolver.py --junitxml=report.xml'


# docs published to GitLab Pages: https://packaging.pages.nic.cz/apkg/

pages:
  stage: deploy
  script:
    - *setup-project
    - mkdocs build
    - mv site public
  artifacts:
    paths:
    - public
  only:
    - master
  except:
    variables:
      - $INTEGRATION
      - $TEST_APKG
      - $TEST_BIRD
      - $TEST_LIBYANG
      - $TEST_KNOT_DNS
      - $TEST_KNOT_RESOLVER

# include jobs to build the containers
include:
  local: 'ci/build_containers.yml'
