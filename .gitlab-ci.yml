variables:
  GIT_STRATEGY: clone
  LC_ALL: C.UTF-8
  INTEGRATION:
    value: false
    description: "Run all Integration tests"
  MINIMAL:
    value: false
    description: "Only run basic tests"
  KNOT_DNS_BRANCH:
    value: "master"
    description: "Knot DNS branch to test"
  KNOT_RESOLVER_BRANCH:
    value: "master"
    description: "Knot Resolver branch to test"
  BIRD_BRANCH:
    value: "pkg-v2"
    description: "BIRD branch to test"


stages:
  - test
  - apkg
  - bird
  - knot-dns
  - knot-resolver
  - deploy


workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - when: always


image: $CI_REGISTRY/packaging/apkg/test/debian-12-full


default:
  tags:
    - docker
    - linux
    - amd64


.setup-git: &setup-git
  - git config --global user.name CI
  - git config --global user.email ci@nic
  - git config --global safe.directory '*'

.setup-git-user: &setup-git-user
  - sudo -u test git config --global user.name CI
  - sudo -u test git config --global user.email ci@nic
  - sudo -u test git config --global safe.directory '*'

.setup-py-reqs: &setup-py-reqs
  - pip3 install -r requirements.txt

.install-project: &install-project
  - pip3 install .

.install-project-py311: &install-project-py311
  - pip3.11 install .

.install-project-legacy: &install-project-legacy
  - python3 setup.py install

.setup-project: &setup-project
  - *setup-git
  - *install-project

.setup-project-py311: &setup-project-py311
  - *setup-git
  - *install-project-py311

.setup-project-legacy: &setup-project-legacy
  - *setup-git
  - *install-project-legacy

.setup-project-user: &setup-project-user
  - *setup-git-user
  - chgrp -R test .
  - chmod -R g+rwX .
  - find -type d -exec chmod g+s {} +
  - git config core.sharedRepository group
  - sudo -u test -i pip install --user --break-system-packages $PWD

.test: &test
  stage: test

.apkg: &apkg
  stage: apkg
  rules:
    - if: $MINIMAL != "true"
  needs:
    - install
  artifacts:
    when: always
    reports:
      junit: report.xml

.bird: &bird
  stage: bird
  rules:
    - if: $INTEGRATION == "true" || $TEST_BIRD == "true"
  needs:
    - install
  artifacts:
    when: always
    reports:
      junit: report.xml
  before_script:
    - echo "Testing BIRD branch $BIRD_BRANCH"

.knot-dns-base: &knot-dns-base
  stage: knot-dns
  rules:
    - if: $INTEGRATION == "true" || $TEST_KNOT_DNS == "true"
  needs:
    - install
  artifacts:
    when: always
    reports:
      junit: report.xml
  before_script:
    - echo "Testing Knot DNS branch $KNOT_DNS_BRANCH"

.knot-dns: &knot-dns
  <<: *knot-dns-base
  needs:
    - knot-dns:make-archive
  dependencies:
    - knot-dns:make-archive

.knot-resolver: &knot-resolver
  stage: knot-resolver
  rules:
    - if: $INTEGRATION == "true" || $TEST_KNOT_RESOLVER == "true"
  needs:
    - install
  artifacts:
    when: always
    reports:
      junit: report.xml
  before_script:
    - echo "Testing Knot Resolver branch $KNOT_RESOLVER_BRANCH"

.nixos: &nixos
  tags:
    - docker
    - linux
    - amd64
  image: nixos/nix
  variables:
    NIX_PATH: nixpkgs=https://github.com/nixos/nixpkgs/archive/nixos-unstable.tar.gz
  before_script:
    # - nix-env -f '<nixpkgs>' -iA gitMinimal
    - *setup-git
    # The image auto-detects as alpine distro, and tests don't allow overriding easily :-/
    - echo 'ID=nixos' > /etc/os-release
    # Some archive scripts need /bin/bash
    - nix-build '<nixpkgs>' -QA bash && ln -s "$(realpath ./result/bin/bash)" /bin/bash
    # build deps when using modern packaging through pyproject.toml
    # which are also needed when running apkg self tests
    - nix-env -f '<nixpkgs>' -iQA python3.pkgs.setuptools
    # Use bootstrap apkg to install itself from the current commit
    - nix-shell '<nixpkgs>' -p apkg --run 'apkg install'
  allow_failure: true


# basic tests

lint:
  <<: *test
  script:
    - ruff check .
  rules:
    - if: $MINIMAL != "true"

install:
  <<: *test
  script:
    - *setup-project
    - apkg --version
  artifacts:
    when: always
    reports:
      junit: report.xml

unit:
  <<: *test
  image: $PYTHON_IMAGE
  script:
    - *setup-py-reqs
    - *setup-project
    - pip3 install pytest
    - python3 -m pytest -v --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml
  parallel:
    matrix:
      - PYTHON_IMAGE:
        - 'python:3.9'
        - 'python:3.10'
        - 'python:3.11'
        - 'python:3.12'
        - 'python:3.13'

unit:legacy:
  <<: *test
  image: $PYTHON_IMAGE
  script:
    - *setup-py-reqs
    - *setup-project
    - pip3 install pytest
    - python3 -m pytest -v --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml
  parallel:
    matrix:
      - PYTHON_IMAGE:
        - 'python:3.6'
        - 'python:3.7'
        - 'python:3.8'
  allow_failure: true

self:
  <<: *test
  script:
    - *setup-py-reqs
    - *setup-project
    - python3 -m pip install pytest
    - python3 -m pytest -v tests/unit tests/self --junitxml=report.xml
  rules:
    - if: $MINIMAL != "true"
  artifacts:
    when: always
    reports:
      junit: report.xml


# integration tests: apkg

apkg:deb:
  image: $CI_REGISTRY/packaging/apkg/test/$DISTRO
  <<: *apkg
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_apkg.py --junitxml=report.xml
  parallel:
    matrix:
      - DISTRO:
        - 'debian-11'
        - 'debian-12'
        - 'debian-13'
        - 'ubuntu-20.04'
        - 'ubuntu-22.04'
        - 'ubuntu-24.04'
        - 'ubuntu-24.10'
        - 'ubuntu-25.04'

apkg:rpm:
  image: $CI_REGISTRY/packaging/apkg/test/$DISTRO
  <<: *apkg
  script:
    - *setup-project
    - python3 -m pytest -v ci/tests/test_apkg.py --junitxml=report.xml
  parallel:
    matrix:
      - DISTRO:
        - 'fedora-41'
        - 'fedora-42'
        - 'rocky-8'
        - 'alma-9'
        - 'alma-10'

apkg:opensuse-tumbleweed:
  image: $CI_REGISTRY/packaging/apkg/test/opensuse-tumbleweed
  <<: *apkg
  script:
    - *setup-project
    - pytest -v ci/tests/test_apkg.py --junitxml=report.xml

apkg:opensuse-15.6:py3.6:
  image: $CI_REGISTRY/packaging/apkg/test/opensuse-15.6
  <<: *apkg
  script:
    # ancient Python 3.6 - use legacy setup.py
    - *setup-project-legacy
    - py.test3 -v ci/tests/test_apkg.py --junitxml=report.xml

apkg:opensuse-15.6:py3.11:
  image: $CI_REGISTRY/packaging/apkg/test/opensuse-15.6
  <<: *apkg
  script:
    # use optional Python 3.11 packages
    - *setup-project-py311
    - py.test-3.11 -v ci/tests/test_apkg.py --junitxml=report.xml

apkg:arch:
  image: $CI_REGISTRY/packaging/apkg/test/arch
  <<: *apkg
  script:
    - *setup-project-user
    - sudo -u test -i bash -c "cd $PWD; py.test -v ci/tests/test_apkg.py --junitxml=report.xml"

apkg:nixos:
  <<: [*nixos, *apkg]
  script:
    - nix-env -f '<nixpkgs>' -iQA gnused
    # This test has issues when some step is cached.
    # Therefore we simplify by taking test dependencies just from the bootstrap apkg
    # (but use $PATH to force the new apkg binary built above).
    - rm -rf pkg/
    - nix-shell '<nixpkgs>' -A apkg --run "PATH='$PATH' "'$(type -P py.test) -v ci/tests/test_apkg.py --junitxml=report.xml'


# integration tests: BIRD

bird:deb:
  image: $CI_REGISTRY/packaging/apkg/test/$DISTRO
  <<: *bird
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_bird.py --junitxml=report.xml
  parallel:
    matrix:
      - DISTRO:
        - 'debian-11'
        - 'debian-12'
        - 'debian-13'
        - 'ubuntu-20.04'
        - 'ubuntu-22.04'
        - 'ubuntu-24.04'
        - 'ubuntu-24.10'
        - 'ubuntu-25.04'

bird:rpm:
  image: $CI_REGISTRY/packaging/apkg/test/$DISTRO
  <<: *bird
  script:
    - *setup-project
    - python3 -m pytest -v ci/tests/test_bird.py --junitxml=report.xml
  parallel:
    matrix:
      - DISTRO:
        - 'fedora-41'
        - 'fedora-42'
        - 'alma-9'
        - 'alma-10'


# integration tests: Knot DNS

knot-dns:make-archive:
  image: $CI_REGISTRY/packaging/apkg/test/debian-12
  <<: *knot-dns-base
  artifacts:
    paths:
      - knot-dns/pkg/
  script:
    - apt update
    - *setup-project
    - git clone --recursive -b $KNOT_DNS_BRANCH https://gitlab.nic.cz/knot/knot-dns.git
    - cd knot-dns
    - apkg build-dep
    - apkg make-archive

knot-dns:deb:
  image: $CI_REGISTRY/packaging/apkg/test/$DISTRO
  <<: *knot-dns
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_dns.py --junitxml=report.xml
  parallel:
    matrix:
      - DISTRO:
        - 'debian-11'
        - 'debian-12'
        - 'debian-13'
        - 'ubuntu-20.04'
        - 'ubuntu-22.04'
        - 'ubuntu-24.04'
        - 'ubuntu-24.10'
        - 'ubuntu-25.04'

knot-dns:rpm:
  image: $CI_REGISTRY/packaging/apkg/test/$DISTRO
  <<: *knot-dns
  script:
    - *setup-project
    - python3 -m pytest -v ci/tests/test_knot_dns.py --junitxml=report.xml
  parallel:
    matrix:
      - DISTRO:
        - 'fedora-41'
        - 'fedora-42'
        - 'rocky-8'
        - 'alma-9'
        - 'alma-10'

knot-dns:opensuse-tumbleweed:
  image: $CI_REGISTRY/packaging/apkg/test/opensuse-tumbleweed
  <<: *knot-dns
  script:
    - *setup-project
    - pytest -v ci/tests/test_knot_dns.py --junitxml=report.xml
  allow_failure: true

knot-dns:opensuse-15.6:
  image: $CI_REGISTRY/packaging/apkg/test/opensuse-15.6
  <<: *knot-dns
  script:
    - *setup-project-py311
    - py.test-3.11 -v ci/tests/test_knot_dns.py --junitxml=report.xml
  allow_failure: true


# integration tests: Knot Resolver

knot-resolver:deb:
  image: $CI_REGISTRY/packaging/apkg/test/$DISTRO
  <<: *knot-resolver
  script:
    - apt update
    - *setup-project
    - py.test-3 -v ci/tests/test_knot_resolver.py --junitxml=report.xml
  parallel:
    matrix:
      - DISTRO:
        - 'debian-11'
        - 'debian-12'
        - 'debian-13'
        - 'ubuntu-20.04'
        - 'ubuntu-22.04'
        - 'ubuntu-24.04'
        - 'ubuntu-24.10'
        - 'ubuntu-25.04'

knot-resolver:rpm:
  image: $CI_REGISTRY/packaging/apkg/test/$DISTRO
  <<: *knot-resolver
  script:
    - *setup-project
    - python3 -m pytest -v ci/tests/test_knot_resolver.py --junitxml=report.xml
  parallel:
    matrix:
      - DISTRO:
        - 'fedora-41'
        - 'fedora-42'
        - 'alma-9'
        - 'alma-10'

knot-resolver:opensuse-tumbleweed:
  image: $CI_REGISTRY/packaging/apkg/test/opensuse-tumbleweed
  <<: *knot-resolver
  script:
    - *setup-project
    - pytest -v ci/tests/test_knot_resolver.py --junitxml=report.xml
  allow_failure: true

knot-resolver:opensuse-15.6:
  image: $CI_REGISTRY/packaging/apkg/test/opensuse-15.6
  <<: *knot-resolver
  script:
    - *setup-project-py311
    - py.test-3.11 -v ci/tests/test_knot_resolver.py --junitxml=report.xml
  allow_failure: true


# docs published to GitLab Pages: https://packaging.pages.nic.cz/apkg/

pages:
  stage: deploy
  script:
    - *setup-project
    - mkdocs build
    - mv site public
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && $MINIMAL != "true" && $INTEGRATION != "true"

# include jobs to build the containers
include:
  local: 'ci/build_containers.yml'
